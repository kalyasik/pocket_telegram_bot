package telegram

import (
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

const (
	commandStart = "start"
	replyStart   = "–ü—Ä–∏–≤–µ—Çüëã –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —è –º–æ–≥ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å—Å—ã–ª–∫–∏ –≤ —Ç–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ Pocket, –º–Ω–µ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–øüîì –î–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ:\n%s"
)

func (b *Bot) handleCommand(message *tgbotapi.Message) error {
	switch message.Command() {
	case commandStart:
		return b.handleStartCommand(message)
	default:
		return b.handleUnknownCommand(message)
	}
}

func (b *Bot) handleMessage(message *tgbotapi.Message) {
	log.Printf("[%s] %s", message.From.UserName, message.Text)

	msg := tgbotapi.NewMessage(message.Chat.ID, message.Text)
	msg.ReplyToMessageID = message.MessageID

	_, err := b.bot.Send(msg)
	if err != nil {
		log.Fatal(err)
	}
}

func (b *Bot) handleStartCommand(message *tgbotapi.Message) error {
	authLink, err := b.generateAuthorizationLink(message.Chat.ID)
	if err != nil {
		return err
	}

	msg := tgbotapi.NewMessage(message.Chat.ID, fmt.Sprintf(replyStart, authLink))
	_, err = b.bot.Send(msg)
	return err
}

func (b *Bot) handleUnknownCommand(message *tgbotapi.Message) error {
	msg := tgbotapi.NewMessage(message.Chat.ID, "–ò–∑–≤–∏–Ω–∏ –Ω–æ —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã —è –Ω–µ –∑–Ω–∞—é :(")
	_, err := b.bot.Send(msg)
	return err
}
